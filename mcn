#!/usr/bin/env python3

import sys

from python_modules.parseArgv import parseArgv, InvalidParameter, DuplicateWarning
from python_modules.matiPatch import patch
from python_modules.createPage import createPage

def dev(msg):
    if True: # or False
        print('\x1b[1;36;44mDev:\x1b[0m ', end="")
        print('\x1b[1;36;1m' + str(msg) + '\x1b[0m ')

def error(msg):
    print('\x1b[6;31;28m' + str(msg) + '\x1b[0m')

def gethelpin(arr, val):
    if val in arr:
        return arr.index(val)
    return 0

main_commands = {
    "patch"     : [["n", "name"], ["f"], ["full"], 0, False, False],
    "page"      : [[], [], [], 1, False, False],
}

help_particular = {
    "patch": "Usage: mcn patch [-n (name)] [-f]\n  -n, --name\t\t   new project's name\n  -f, --full\t\t   force reinstallation of dependencies",
    "page": "Usage: mcn page [-f][-D] (name)\n  -D, --delete\t\t   delete named page(WIP)\n  -f, --fix-routes\t   attempts to adapt the routes file to the standard(WIP)"
}

def printHelp(particular=""):
    if len(particular) == 0 or particular == sys.argv[0]:
        print("""MCN NativeScript option list
  mcn --help\t\t   prints this message
  mcn --version\t\t   get the toolkit version
  mcn <command> --help\t   prints particular help about <command>
MCN NativeScript toolkit command list
  patch\t\t\t   tries to ammend project naming issues
  page\t\t\t   creates a new page and adds it to routes""")
    else:
        if particular in help_particular:
            print(help_particular[particular])
        else:
            error('Unknown command: "' + particular + '"')
            print("Type mcn --help to list all available commands")
    exit(0)

# Program starts here -----------------------------------------------------------

try:
    if "--help" in sys.argv or len(sys.argv) == 1:
        printHelp(sys.argv[gethelpin(sys.argv,"--help")-1])

    mainCMD = sys.argv[1]
    if mainCMD not in main_commands:
        printHelp(mainCMD)
           

    res = parseArgv(sys.argv[2:], *main_commands[mainCMD])
except DuplicateWarning as e:
    error(e)
    exit(1)
except SyntaxError as e:
    error(e)
    printHelp(mainCMD)
    exit(1)
except InvalidParameter as e:
    error("Invalid parameter: \"" + ("-"*(1+(len(str(e))>1))) + str(e) + "\"")
    printHelp(mainCMD)
    exit(1)
except BaseException as e:
    if (str(e) != "0"):
        dev("Exception -> " + str(e))
        exit(2)
    else:
        exit(1)

dev(res)